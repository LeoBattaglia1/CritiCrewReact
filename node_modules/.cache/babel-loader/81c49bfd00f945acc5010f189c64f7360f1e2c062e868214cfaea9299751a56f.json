{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mariano\\\\Desktop\\\\CritiCrewReact\\\\src\\\\componentes\\\\carousel\\\\carousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Movie from '../movie/movie';\nimport DetailsMovie from '../details/detailsMovie';\nimport './carousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Carousel = _ref => {\n  _s();\n  let {\n    handleDetailsVisibility\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n  const fetchMovies = async () => {\n    try {\n      const movieIds = Array.from({\n        length: 4\n      }, () => Math.floor(Math.random() * 550) + 1);\n      const apiKey = '83bc0d3d812780eff004a2baed4eaf17';\n      const promises = movieIds.map(movieId => axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`));\n      const responses = await Promise.all(promises);\n      const moviesData = responses.map(response => response.data);\n      setMovies(moviesData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const handleClick = movie => {\n    setSelectedMovie(movie);\n    setShowDetails(true);\n    handleDetailsVisibility(); // Llamamos a la función handleDetailsVisibility proporcionada desde App\n  };\n\n  const handleBackClick = () => {\n    setSelectedMovie(null);\n    setShowDetails(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: showDetails ? /*#__PURE__*/_jsxDEV(DetailsMovie, {\n      movie: selectedMovie,\n      handleBackClick: handleBackClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-content\",\n        children: /*#__PURE__*/_jsxDEV(Movie, {\n          movie: movie,\n          handleClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton\",\n        onClick: fetchMovies,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"+2neq5QN83J7+fSunQM3i15uIkc=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Movie","DetailsMovie","jsxDEV","_jsxDEV","Fragment","_Fragment","Carousel","_ref","_s","handleDetailsVisibility","movies","setMovies","selectedMovie","setSelectedMovie","showDetails","setShowDetails","fetchMovies","movieIds","Array","from","length","Math","floor","random","apiKey","promises","map","movieId","get","responses","Promise","all","moviesData","response","data","error","console","handleClick","movie","handleBackClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mariano/Desktop/CritiCrewReact/src/componentes/carousel/carousel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../movie/movie';\r\nimport DetailsMovie from '../details/detailsMovie';\r\nimport './carousel.css';\r\n\r\nconst Carousel = ({ handleDetailsVisibility }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  const fetchMovies = async () => {\r\n    try {\r\n      const movieIds = Array.from({ length: 4 }, () => Math.floor(Math.random() * 550) + 1);\r\n      const apiKey = '83bc0d3d812780eff004a2baed4eaf17';\r\n      const promises = movieIds.map((movieId) =>\r\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`)\r\n      );\r\n      const responses = await Promise.all(promises);\r\n      const moviesData = responses.map((response) => response.data);\r\n      setMovies(moviesData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const handleClick = (movie) => {\r\n    setSelectedMovie(movie);\r\n    setShowDetails(true);\r\n    handleDetailsVisibility(); // Llamamos a la función handleDetailsVisibility proporcionada desde App\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    setSelectedMovie(null);\r\n    setShowDetails(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel\">\r\n      {showDetails ? (\r\n        <DetailsMovie movie={selectedMovie} handleBackClick={handleBackClick} />\r\n      ) : (\r\n        <>\r\n          {movies.map((movie) => (\r\n            <div key={movie.id} className=\"carousel-content\">\r\n              <Movie movie={movie} handleClick={handleClick} />\r\n            </div>\r\n          ))}\r\n          <button className=\"boton\" onClick={fetchMovies}>\r\n            &gt;\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}