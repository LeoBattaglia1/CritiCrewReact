{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mariano\\\\Desktop\\\\CritiCrewReact\\\\src\\\\componentes\\\\carousel\\\\carousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport YouTube from 'react-youtube';\nimport Movie from '../movie/movie';\nimport DetailsMovie from '../details/detailsMovie';\nimport './carousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Carousel = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n  const fetchMovies = async () => {\n    try {\n      const movieIds = Array.from({\n        length: 4\n      }, () => Math.floor(Math.random() * 150) + 1);\n      const apiKey = 'YOUR_TMDB_API_KEY';\n      const promises = movieIds.map(movieId => axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`));\n      const responses = await Promise.all(promises);\n      const moviesData = responses.map(response => response.data);\n      const moviesWithTrailers = await Promise.all(moviesData.map(async movie => {\n        const trailerResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${apiKey}`);\n        const trailerData = trailerResponse.data;\n        const trailer = trailerData.results.find(result => result.site === 'YouTube');\n        return {\n          ...movie,\n          trailerId: trailer ? trailer.key : null\n        };\n      }));\n      setMovies(moviesWithTrailers);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const handleDetailsVisibility = movie => {\n    setSelectedMovie(movie);\n    setShowDetails(true);\n  };\n  const handleBackClick = () => {\n    setSelectedMovie(null);\n    setShowDetails(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: showDetails ? /*#__PURE__*/_jsxDEV(DetailsMovie, {\n      movie: selectedMovie,\n      handleBackClick: handleBackClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-content\",\n        children: [/*#__PURE__*/_jsxDEV(Movie, {\n          movie: movie,\n          handleDetailsVisibility: handleDetailsVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), movie.trailerId && /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: movie.trailerId,\n          opts: {/* Opciones de YouTube */}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton\",\n        onClick: fetchMovies,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"+2neq5QN83J7+fSunQM3i15uIkc=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","useEffect","axios","YouTube","Movie","DetailsMovie","jsxDEV","_jsxDEV","Fragment","_Fragment","Carousel","_s","movies","setMovies","selectedMovie","setSelectedMovie","showDetails","setShowDetails","fetchMovies","movieIds","Array","from","length","Math","floor","random","apiKey","promises","map","movieId","get","responses","Promise","all","moviesData","response","data","moviesWithTrailers","movie","trailerResponse","id","trailerData","trailer","results","find","result","site","trailerId","key","error","console","handleDetailsVisibility","handleBackClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","videoId","opts","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mariano/Desktop/CritiCrewReact/src/componentes/carousel/carousel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport Movie from '../movie/movie';\r\nimport DetailsMovie from '../details/detailsMovie';\r\nimport './carousel.css';\r\n\r\nconst Carousel = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  const fetchMovies = async () => {\r\n    try {\r\n      const movieIds = Array.from({ length: 4 }, () => Math.floor(Math.random() * 150) + 1);\r\n      const apiKey = 'YOUR_TMDB_API_KEY';\r\n      const promises = movieIds.map((movieId) =>\r\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`)\r\n      );\r\n      const responses = await Promise.all(promises);\r\n      const moviesData = responses.map((response) => response.data);\r\n      const moviesWithTrailers = await Promise.all(\r\n        moviesData.map(async (movie) => {\r\n          const trailerResponse = await axios.get(\r\n            `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${apiKey}`\r\n          );\r\n          const trailerData = trailerResponse.data;\r\n          const trailer = trailerData.results.find((result) => result.site === 'YouTube');\r\n          return {\r\n            ...movie,\r\n            trailerId: trailer ? trailer.key : null,\r\n          };\r\n        })\r\n      );\r\n      setMovies(moviesWithTrailers);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const handleDetailsVisibility = (movie) => {\r\n    setSelectedMovie(movie);\r\n    setShowDetails(true);\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    setSelectedMovie(null);\r\n    setShowDetails(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel\">\r\n      {showDetails ? (\r\n        <DetailsMovie movie={selectedMovie} handleBackClick={handleBackClick} />\r\n      ) : (\r\n        <>\r\n          {movies.map((movie) => (\r\n            <div key={movie.id} className=\"carousel-content\">\r\n              <Movie movie={movie} handleDetailsVisibility={handleDetailsVisibility} />\r\n              {movie.trailerId && (\r\n                <YouTube videoId={movie.trailerId} opts={{/* Opciones de YouTube */}} />\r\n              )}\r\n            </div>\r\n          ))}\r\n          <button className=\"boton\" onClick={fetchMovies}>\r\n            &gt;\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}