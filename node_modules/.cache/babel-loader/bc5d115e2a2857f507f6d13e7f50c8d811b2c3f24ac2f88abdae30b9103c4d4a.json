{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leand\\\\OneDrive\\\\Escritorio\\\\CritiCrewReact\\\\src\\\\componentes\\\\carousel\\\\carousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Movie from '../movie/movie';\nimport Publicidad from '../publicidad/publicidad';\nimport DetailsMovie from '../details/detailsMovie';\nimport './carousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Carousel = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [genres, setGenres] = useState([{\n    id: 1,\n    name: 'Comedia'\n  }, {\n    id: 2,\n    name: 'Drama'\n  }, {\n    id: 3,\n    name: 'Romántica'\n  }, {\n    id: 4,\n    name: 'Ciencia Ficción'\n  }, {\n    id: 5,\n    name: 'Thriller'\n  }]);\n  const fetchMovies = async () => {\n    setIsLoading(true);\n    try {\n      const apiKey = '83bc0d3d812780eff004a2baed4eaf17';\n      const response = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&page=${page}`);\n      const moviesData = response.data.results;\n      setMovies(prevMovies => [...prevMovies, ...moviesData]);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [page]);\n  const handleDetailsVisibility = movie => {\n    setSelectedMovie(movie);\n    setShowDetails(true);\n  };\n  const handleBackClick = () => {\n    setSelectedMovie(null);\n    setShowDetails(false);\n  };\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  const handleGenreClick = genreId => {\n    // Aquí puedes implementar la lógica para filtrar las películas por género\n    // Puedes utilizar el genreId para realizar la filtración\n    // Por ejemplo, puedes crear un nuevo estado para almacenar las películas filtradas por género y actualizarlo aquí\n    // También puedes modificar la función fetchMovies para incluir el género como parámetro en la solicitud a la API\n\n    // Ejemplo de lógica para filtrar las películas por género:\n    // const filteredMovies = movies.filter((movie) => movie.genre_ids.includes(genreId));\n    // setMovies(filteredMovies);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-cord\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGenreClick(genre.id),\n        children: genre.name\n      }, genre.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), showDetails ? /*#__PURE__*/_jsxDEV(DetailsMovie, {\n      movie: selectedMovie,\n      handleBackClick: handleBackClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-grid\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-content\",\n          children: /*#__PURE__*/_jsxDEV(Movie, {\n            movie: movie,\n            handleDetailsVisibility: handleDetailsVisibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-more-container\",\n        children: /*#__PURE__*/_jsxDEV(Publicidad, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"B76Sl45zNSauSxsdbEGoZOJg1wE=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Movie","Publicidad","DetailsMovie","jsxDEV","_jsxDEV","Fragment","_Fragment","Carousel","_s","movies","setMovies","selectedMovie","setSelectedMovie","showDetails","setShowDetails","page","setPage","isLoading","setIsLoading","genres","setGenres","id","name","fetchMovies","apiKey","response","get","moviesData","data","results","prevMovies","error","console","handleDetailsVisibility","movie","handleBackClick","handleLoadMore","prevPage","handleGenreClick","genreId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","onClick","_c","$RefreshReg$"],"sources":["C:/Users/leand/OneDrive/Escritorio/CritiCrewReact/src/componentes/carousel/carousel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../movie/movie';\r\nimport Publicidad from '../publicidad/publicidad';\r\nimport DetailsMovie from '../details/detailsMovie';\r\nimport './carousel.css';\r\n\r\nconst Carousel = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [genres, setGenres] = useState([\r\n    { id: 1, name: 'Comedia' },\r\n    { id: 2, name: 'Drama' },\r\n    { id: 3, name: 'Romántica' },\r\n    { id: 4, name: 'Ciencia Ficción' },\r\n    { id: 5, name: 'Thriller' },\r\n  ]);\r\n\r\n  const fetchMovies = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const apiKey = '83bc0d3d812780eff004a2baed4eaf17';\r\n      const response = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&page=${page}`);\r\n      const moviesData = response.data.results;\r\n      setMovies((prevMovies) => [...prevMovies, ...moviesData]);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [page]);\r\n\r\n  const handleDetailsVisibility = (movie) => {\r\n    setSelectedMovie(movie);\r\n    setShowDetails(true);\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    setSelectedMovie(null);\r\n    setShowDetails(false);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    setPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  const handleGenreClick = (genreId) => {\r\n    // Aquí puedes implementar la lógica para filtrar las películas por género\r\n    // Puedes utilizar el genreId para realizar la filtración\r\n    // Por ejemplo, puedes crear un nuevo estado para almacenar las películas filtradas por género y actualizarlo aquí\r\n    // También puedes modificar la función fetchMovies para incluir el género como parámetro en la solicitud a la API\r\n\r\n    // Ejemplo de lógica para filtrar las películas por género:\r\n    // const filteredMovies = movies.filter((movie) => movie.genre_ids.includes(genreId));\r\n    // setMovies(filteredMovies);\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel\">\r\n      {/* Cordón de botones con los géneros */}\r\n      <div className=\"genre-cord\">\r\n        <h3>Generos:</h3>\r\n        {genres.map((genre) => (\r\n          <button key={genre.id} onClick={() => handleGenreClick(genre.id)}>{genre.name}</button>\r\n        ))}\r\n      </div>\r\n\r\n      {showDetails ? (\r\n        <DetailsMovie movie={selectedMovie} handleBackClick={handleBackClick} />\r\n      ) : (\r\n        <>\r\n          <div className=\"carousel-grid\">\r\n            {movies.map((movie) => (\r\n              <div key={movie.id} className=\"carousel-content\">\r\n                <Movie movie={movie} handleDetailsVisibility={handleDetailsVisibility} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Botón de cargar más */}\r\n          <div className=\"load-more-container\">\r\n            <Publicidad />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}