{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mariano\\\\Desktop\\\\CritiCrewReact\\\\src\\\\componentes\\\\carousel\\\\carousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Movie from '../movie/movie';\nimport './carousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carousel = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const fetchMovies = async () => {\n    try {\n      const movieIds = Array.from({\n        length: 4\n      }, () => Math.floor(Math.random() * 150) + 1);\n      const apiKey = '83bc0d3d812780eff004a2baed4eaf17';\n      const promises = movieIds.map(movieId => axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`));\n      const responses = await Promise.all(promises);\n      const moviesData = responses.map(response => response.data);\n      setMovies(moviesData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const goToNextSlide = () => {\n    fetchMovies();\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-content\",\n      children: /*#__PURE__*/_jsxDEV(Movie, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"boton\",\n      onClick: goToNextSlide,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Movie","jsxDEV","_jsxDEV","Carousel","_s","movies","setMovies","fetchMovies","movieIds","Array","from","length","Math","floor","random","apiKey","promises","map","movieId","get","responses","Promise","all","moviesData","response","data","error","console","goToNextSlide","className","children","movie","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mariano/Desktop/CritiCrewReact/src/componentes/carousel/carousel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../movie/movie';\r\nimport './carousel.css';\r\n\r\nconst Carousel = () => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const fetchMovies = async () => {\r\n    try {\r\n      const movieIds = Array.from({ length: 4 }, () => Math.floor(Math.random() * 150) + 1);\r\n      const apiKey = '83bc0d3d812780eff004a2baed4eaf17';\r\n      const promises = movieIds.map((movieId) =>\r\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`)\r\n      );\r\n      const responses = await Promise.all(promises);\r\n      const moviesData = responses.map((response) => response.data);\r\n      setMovies(moviesData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const goToNextSlide = () => {\r\n    fetchMovies();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"carousel\">\r\n \r\n        {movies.map((movie) => (\r\n               <div className=\"carousel-content\">\r\n          <Movie key={movie.id} movie={movie} />\r\n          </div>\r\n        ))}\r\n        <button className=\"boton\" onClick={goToNextSlide}>\r\n          &gt;\r\n        </button>\r\n      </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,EAAE,MAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;MACrF,MAAMC,MAAM,GAAG,kCAAkC;MACjD,MAAMC,QAAQ,GAAGR,QAAQ,CAACS,GAAG,CAAEC,OAAO,IACpCnB,KAAK,CAACoB,GAAG,CAAE,sCAAqCD,OAAQ,YAAWH,MAAO,EAAC,CAC7E,CAAC;MACD,MAAMK,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MAC7C,MAAMO,UAAU,GAAGH,SAAS,CAACH,GAAG,CAAEO,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;MAC7DnB,SAAS,CAACiB,UAAU,CAAC;IACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BrB,WAAW,CAAC,CAAC;EACf,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdS,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAK2B,SAAS,EAAC,UAAU;IAAAC,QAAA,GAEpBzB,MAAM,CAACY,GAAG,CAAEc,KAAK,iBACX7B,OAAA;MAAK2B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eACtC5B,OAAA,CAACF,KAAK;QAAgB+B,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACN,CAAC,eACFlC,OAAA;MAAQ2B,SAAS,EAAC,OAAO;MAACQ,OAAO,EAAET,aAAc;MAAAE,QAAA,EAAC;IAElD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGZ,CAAC;AAAChC,EAAA,CAxCID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}